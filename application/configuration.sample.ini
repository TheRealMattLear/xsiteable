[website]

; the main site parameters
name = 'My Funny Site'

; uri used as prefix in links everywhere (no ending slashes, please)
uri  = 'http://mysite'

; a pipe-separated list of languages, ie. 'en|no|de' for English, Norwegian and German
language = 'en|no'

; default JQuery UI style (under /static/css)
style = 'redmond'

[pages]

; menu items
; URI                           = 'Title of page'
; URI:template                  = what template to run
; URI:iframe                    = put this new URI into an iframe (also sets URI:template
;                                 to 'iframe', unless overridden by explicitly set URI:template)
; URI:condition                 = what conditions in order to see this item
; URI:display                   = if condition fails; show 'disabled', or 'hide', default is 'hide'

main                  = 'Home'
main/news             = 'News'
main/forum            = 'Forum'
main/workspaces       = 'Workspaces'
main/admin            = 'Admin'
main/admin:weight     = 999
main/admin:condition  = 'role=admin'

[admin]

; The default admin user
username = 'admin'
password = 'admin'
email = 'admin@somewhere.org'

; Where should we send emails of reported various issues?
issues_email = 'admin@somewhere.org'

; various display options
show-issues = "Report an issue"
show-version = true
show-instance = true
show-user-debug = true
show-message = false
show-logout = true

; where do we want images (from users) uploaded to?
image_upload = './static/images/upload'

[framework]

; security model; open (default, everything is accessible, but restricted by rules)
; or closed (meaning, everything is restricted, access opened by rules)

security_model = open

; our website main URI template (no change needed unless you're harcore)
uri_template = '{concept}/{section}/{id}/{selector}/{specific}/{atom}'

; Date format ; used for actual date representation, including in databases,
; and is  not *only* the display format, so tread lightly
date_format = 'Y-m-d H:i:s'
date_format_short = 'Y-m-d'

; Display dates in a human-friendly way?
date_human = true

; temporary directory, for storing cache files
cache_directory = './cache'

; if topics and entries in the database are date/time and / or username free,
; should we try to automatically fill them out?
auto_signing = true

; if a cache file is older than this, we can probably delete it (used for generic
; cleanup of the system)
cache_delete_age = '3 months' ;

; support alias types for old versions of xSiteable? (new installation never needs this)
type_alias = false

; proxy, if we need one (false if none) 
use_proxy = false ; tcp://10.2.1.2:3128

[cache]
; various cache settings to fine-tune the system
default = '+2 minutes'
widget_recent_activity = '+1 minute'
news-top-20 = '+10 minutes'

[resolve]
; resolve "topic_type" to "relative_uri"
; example: all topics of type '_page' will resolve to '{$home}/_page/{$topic_id}'


[dms]
; Document Management System
enabled = true

; source and destination folders are OS paths
source_folder       = '/where/I/keep/me/files'
destination_folder  = '/where/I/copy/my/accessible/files/to'

; the URI (web access) to the destination folder
destination_uri     = 'http://mysite/static/docs'

; various supported formats
format.pdf.html = ''
format.pdf.txt = ''

format.doc.html = ''
format.doc.txt = ''

format.xls.html = ''
format.xls.txt = ''

[database]
; uses PDO dsn, username and password
dsn        = 'mysql:host=localhost;dbname=xs'
username   = 'root'
password   = 'whateva'

[user_management]

; authentication datasources to use
; check = check for existance of user, authenticate = also authenticate
service['xs_config'] = 'check|authenticate'  ; Internal xSiteable config file
service['xs'] = 'check|authenticate'         ; Internal xSiteable database
; service['ad_ldap'] = 'check'                 ; Active Directory

; if a users email isn't in the database, create one with their username and this domain
profile_email_domain = 'example.com'

; should we use NTLM (automatic AD over LDAP) lookup of usernames?
NTLM = false

; Should we use a development model, with a list of various users with different roles?
DEV = false

; Hard-code a couple of default users. You can completely kill these, or use
; them for always having a basic account to do administration. Also, don't
; call the main administrator 'admin' or 'root' for security reasons; rather,
; try to be inventive, like 'godzilla' or 'mamabear' or something. Just sayin'

; NB! remember to put quotes around your values, as they are parsed by YAML if not

user/thor:name = 'Thor, god of Thunder'
user/thor:password = 'thunder'
user/thor:role = '*'
user/thor:group = '*'
user/thor:function = 'func1|func2|func3'

user/zeus:name = 'Zeus, god of Access'
user/zeus:password = 'access'
user/zeus:role = 'admin|super-admin'
user/zeus:group = '*'
user/zeus:function = 'funky'


[ad]
; Active Directory setting, if we're using it
active = false
username = 'username'
password = 'password'
base_dn = 'DC=domain,DC=local'
account_suffix = '@domain.local'
domain_controllers = 'ctrl1', 'ctrl2'
le.